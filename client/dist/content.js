!function(){"use strict";let e=!1,o=[],t=!0,n=!1;function r(){console.log("showSetupOverlay called");try{if(document.getElementById("removetube-setup-overlay"))return void console.log("Setup overlay already exists, skipping");console.log("Creating setup overlay..."),function(){console.log("Creating setup overlay without API key sections");const r=document.createElement("div");r.id="removetube-setup-overlay",r.innerHTML='\n        <div class="removetube-overlay">\n          <div class="removetube-modal">\n            <h2>Welcome to RemoveTube</h2>\n            <p>Let\'s set up your allowed content to help you stay focused.</p>\n            <div class="removetube-form">\n              <label for="removetube-topics">What content do you want to allow? (comma-separated) <span style="color: red;">*</span>:</label>\n              <input type="text" id="removetube-topics" placeholder="music, coding, math, chemistry, etc" required />\n              <small style="color: #888; font-size: 12px;">This field is required. Enter at least one topic to continue.</small>\n              <div class="removetube-checkbox">\n                <input type="checkbox" id="removetube-strict" checked />\n                <label for="removetube-strict">Strict mode (block if uncertain)</label>\n              </div>\n              <button id="removetube-save">Save & Continue</button>\n            </div>\n          </div>\n        </div> \n      ';const i=document.createElement("style");i.textContent='\n        .removetube-overlay {\n          position: fixed;\n          top: 0;\n          left: 0;\n          width: 100vw;\n          height: 100vh;\n          background: #1a1a1a;\n          z-index: 999999999;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, Arial, sans-serif;\n          backdrop-filter: none;\n          overflow: hidden;\n        }\n        \n        .removetube-overlay::before {\n          content: \'\';\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          z-index: -1;\n        }\n        \n        .removetube-modal {\n          background: rgba(255, 255, 255, 0.95);\n          backdrop-filter: blur(10px);\n          padding: 40px;\n          border-radius: 20px;\n          max-width: 700px;\n          width: 90%;\n          max-height: 90vh;\n          overflow-y: auto;\n          box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\n          border: 1px solid rgba(255, 255, 255, 0.2);\n        }\n        \n        .removetube-modal h2 {\n          margin: 0 0 20px 0;\n          color: #333;\n          text-align: center;\n          font-size: 28px;\n          font-weight: 600;\n        }\n        \n        .removetube-modal p {\n          margin: 0 0 30px 0;\n          color: #666;\n          text-align: center;\n          font-size: 16px;\n          line-height: 1.5;\n        }\n        \n        .ai-info-section {\n          margin-bottom: 30px;\n        }\n        \n        .ai-info-card {\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          padding: 20px;\n          border-radius: 12px;\n          margin-bottom: 20px;\n        }\n        \n        .ai-info-card h3 {\n          margin: 0 0 15px 0;\n          font-size: 18px;\n          font-weight: 600;\n        }\n        \n        .ai-info-card p {\n          margin: 0 0 15px 0;\n          color: rgba(255, 255, 255, 0.9);\n          text-align: left;\n          font-size: 14px;\n        }\n        \n        .ai-info-card ul {\n          margin: 0;\n          padding: 0;\n          list-style: none;\n        }\n        \n        .ai-info-card li {\n          margin: 8px 0;\n          padding: 0;\n          color: rgba(255, 255, 255, 0.9);\n          font-size: 14px;\n        }\n        \n        .removetube-form label {\n          display: block;\n          margin: 20px 0 8px 0;\n          font-weight: 600;\n          color: #333;\n          font-size: 14px;\n        }\n        \n        .removetube-form input[type="text"] {\n          width: 100%;\n          padding: 14px 16px;\n          border: 2px solid #e1e5e9;\n          border-radius: 10px;\n          box-sizing: border-box;\n          font-size: 14px;\n          transition: border-color 0.3s ease;\n        }\n        \n        .removetube-form input[type="text"]:focus {\n          outline: none;\n          border-color: #667eea;\n          box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n        }\n        \n        .removetube-form input[type="text"][required] {\n          border-color: #d32f2f;\n        }\n        \n        .removetube-form input[type="text"][required]:valid {\n          border-color: #2e7d32;\n        }\n        \n        .removetube-form small {\n          color: #888;\n          font-size: 12px;\n          margin-top: 6px;\n          display: block;\n          line-height: 1.4;\n        }\n        \n        .removetube-checkbox {\n          display: flex;\n          align-items: center;\n          margin: 20px 0;\n          padding: 12px;\n          background: rgba(102, 126, 234, 0.05);\n          border-radius: 8px;\n        }\n        \n        .removetube-checkbox input {\n          margin-right: 12px;\n          transform: scale(1.2);\n        }\n        \n        .removetube-checkbox label {\n          margin: 0;\n          color: #333;\n          font-size: 14px;\n        }\n        \n        .removetube-form button {\n          width: 100%;\n          padding: 16px;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          border: none;\n          border-radius: 10px;\n          font-size: 16px;\n          font-weight: 600;\n          cursor: pointer;\n          margin-top: 20px;\n          transition: transform 0.2s ease, box-shadow 0.2s ease;\n        }\n        \n        .removetube-form button:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 8px 20px rgba(102, 126, 234, 0.3);\n        }\n        \n        .removetube-form button:active {\n          transform: translateY(0);\n        }\n        \n        /* Hide all page content behind overlay */\n        body.removetube-overlay-active {\n          overflow: hidden;\n        }\n        \n        body.removetube-overlay-active > *:not(#removetube-setup-overlay) {\n          display: none !important;\n        }\n      ',document.head.appendChild(i),document.body.appendChild(r),document.body.classList.add("removetube-overlay-active"),setTimeout((()=>{const a=document.getElementById("removetube-save");a?a.addEventListener("click",(l=>{l.preventDefault(),console.log("Save button clicked");const d=a.textContent;a.textContent="⏳ Saving...",a.disabled=!0;try{const l=document.getElementById("removetube-topics"),u=document.getElementById("removetube-strict");if(!l||!u)throw new Error("Required form elements not found");const g=l.value.split(",").map((e=>e.trim())).filter((e=>e.length>0));if(0===g.length)return alert("Please enter at least one allowed topic before continuing."),l.focus(),a.textContent=d,void(a.disabled=!1);const p=u.checked,h={sessionTopics:g,sessionStrictMode:p};if(console.log("Attempting to save session data:",h),!chrome||!chrome.runtime)throw new Error("Chrome extension context is not available");chrome.storage.sync.set({allowedTopics:g,strictMode:p,isSetupComplete:!0},(async()=>{if(chrome.runtime.lastError)return console.error("RemoveTube: Error saving settings:",chrome.runtime.lastError.message),alert("Error saving settings: "+chrome.runtime.lastError.message+". Please try again."),a.textContent=d,void(a.disabled=!1);console.log("Settings saved successfully, setting up AI server...");try{a.textContent="🧠 Setting up AI...",await window.aiClassifier.setupTopics(g),console.log("AI server setup complete")}catch(e){console.warn("Server setup failed, will use fallback:",e)}try{r.remove(),i.remove(),document.body.classList.remove("removetube-overlay-active"),o=g,t=p,window.location.pathname.includes("/watch")&&setTimeout((()=>async function(){if(!e){e=!0,n=!1;try{await new Promise((e=>setTimeout(e,2e3)));const o=await m();if(!o.title&&!o.description)return console.log("No video metadata found (title/description both empty) in fallback, skipping classification request."),void(e=!1);console.log("Fallback check - Video title/desc:",o.title,o.description);const t=await s(o.title,o.description);t.allowed?console.log("Video allowed:",t.topic,`(${Math.round(100*t.confidence)}% confidence)`):c("Content not in allowed topics",t.topic,t.confidence)}finally{e=!1}}}()),1e3)}catch(e){console.warn("Error during overlay cleanup:",e)}new Promise((e=>{try{chrome.storage.sync.get(["allowedTopics","strictMode","isSetupComplete"],(n=>{if(chrome.runtime.lastError)return console.warn("RemoveTube: Error loading settings:",chrome.runtime.lastError.message),o=[],t=!0,void e(!1);o=n.allowedTopics||[],t=!1!==n.strictMode,e(!0===n.isSetupComplete)}))}catch(n){console.warn("RemoveTube: Error loading settings:",n),o=[],t=!0,e(!1)}})).then((e=>{console.log("RemoveTube setup complete! Settings reloaded:",e)})).catch((e=>{console.error("RemoveTube: Error loading settings after setup:",e)}))}))}catch(e){console.error("Error during save operation:",e),alert("Error saving settings: "+e.message+". Please try again."),a.textContent=d,a.disabled=!1}})):console.error("Save button not found!")}),100),console.log("Setup overlay created and event listeners attached")}()}catch(e){console.error("Error in showSetupOverlay:",e)}}function i(e,t){const n=`${e} ${t}`.toLowerCase();for(const e of o)if(n.includes(e.toLowerCase()))return{allowed:!0,topic:e,confidence:.8};return{allowed:!1,confidence:.2}}async function s(e,n){if(!o||0===o.length)return console.warn("No allowed topics set, falling back to simple matching"),i(e,n);try{console.log("Using server-based AI classification...");const r=await window.aiClassifier.classifyHierarchical(e,n,o,t);return console.log("Server AI classification result:",r),{allowed:r.allowed,topic:r.topic,confidence:r.confidence,method:r.method||"browser-ai"}}catch(o){return console.warn("Browser AI classification error, falling back to simple matching:",o),i(e,n)}}function a(e){try{return new URL(e).searchParams.get("v")}catch{return null}}async function c(e,t,r){const i=a(window.location.href);if(i&&(await new Promise((e=>{chrome.storage.local.get(["watchAnywayOverrides"],(o=>{e(o.watchAnywayOverrides||[])}))}))).includes(i))return void console.log("Watch Anyway override found for this video, skipping block.");n=!0,document.title;const s=window.location.href;console.log("Blocking video:",{originalUrl:s,reason:e,topic:t,confidence:r}),document.body.innerHTML=`\n      <div style="\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        height: 100vh;\n        font-family: Arial, sans-serif;\n        background: #f5f5f5;\n        margin: 0;\n        padding: 20px;\n        box-sizing: border-box;\n      ">\n        <div style="\n          text-align: center;\n          background: white;\n          padding: 40px;\n          border-radius: 10px;\n          box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n          max-width: 500px;\n        ">\n          <div style="font-size: 48px; margin-bottom: 20px;">🚫</div>\n          <h2 style="color: #d32f2f; margin: 0 0 15px 0;">Content Blocked</h2>\n          <p style="color: #666; margin: 0 0 20px 0; line-height: 1.5;">\n            This video doesn't match your allowed topics and has been blocked to help you stay focused.\n          </p>\n          <div style="background: #f5f5f5; padding: 15px; border-radius: 5px; margin: 20px 0;">\n            <strong>Detected topic:</strong> ${t||"Unknown"}<br>\n            <strong>Confidence:</strong> ${Math.round(100*(r||0))}%<br>\n            <strong>Allowed topics:</strong> ${o.join(", ")}\n          </div>\n          <p style="color: #ff9800; font-size: 14px; margin: 15px 0 5px 0; line-height: 1.4;">\n            <strong>Think this is a mistake?</strong> Use "Watch Anyway" if the video was incorrectly detected.\n          </p>\n          <button id="go-back-btn" style="\n            background: #1976d2;\n            color: white;\n            border: none;\n            padding: 12px 24px;\n            border-radius: 5px;\n            cursor: pointer;\n            margin-right: 10px;\n          ">← Go Back</button>\n          <button id="settings-btn" style="\n            background: #666;\n            color: white;\n            border: none;\n            padding: 12px 24px;\n            border-radius: 5px;\n            cursor: pointer;\n            margin-right: 10px;\n          ">⚙️ Settings</button>\n          <button id="watch-anyway-btn" style="\n            background: #f57c00;\n            color: white;\n            border: none;\n            padding: 12px 24px;\n            border-radius: 5px;\n            cursor: pointer;\n            margin-top: 10px;\n            display: block;\n            margin-left: auto;\n            margin-right: auto;\n          ">⚠️ Watch Anyway</button>\n        </div>\n      </div>\n    `,setTimeout((()=>{const e=document.getElementById("go-back-btn"),i=document.getElementById("settings-btn"),c=document.getElementById("watch-anyway-btn"),l=window.location.href;console.log("Video blocked at URL:",l);const d=setInterval((()=>{const e=window.location.href;if(e!==l){console.log("Navigation detected! URL changed from",l,"to",e),n=!1,clearInterval(d);const o=document.querySelector("body");o&&o.innerHTML.includes("Content Blocked")&&(console.log("Removing blocking overlay after navigation"),setTimeout((()=>{location.reload()}),50))}}),500);function u(){try{if(chrome&&chrome.runtime&&chrome.runtime.id){const e=chrome.runtime.getURL("options.html");window.open(e,"_blank")}else alert("Please open extension settings from the browser toolbar (click the RemoveTube icon).")}catch(e){console.error("All fallback methods failed:",e),alert("Please open extension settings from the browser toolbar (click the RemoveTube icon).")}}setTimeout((()=>{clearInterval(d)}),1e4),e&&e.addEventListener("click",(o=>{o.preventDefault(),console.log("Go back button clicked"),e.textContent="⏳ Going back...",e.disabled=!0,e.style.background="#999",clearInterval(d),n=!1;const t=window.location.href;console.log("Current URL before navigation:",t);try{if(window.history.length>1){console.log("Using history.back()");const e=()=>{console.log("Navigation completed via history.back()"),window.removeEventListener("popstate",e),setTimeout((()=>{document.body.innerHTML.includes("Content Blocked")&&(console.log("Blocked content still visible, reloading page"),location.reload())}),100)};window.addEventListener("popstate",e),setTimeout((()=>{window.removeEventListener("popstate",e),window.location.href===t?(console.log("history.back() failed, navigating to YouTube home"),window.location.assign("https://www.youtube.com/")):document.body.innerHTML.includes("Content Blocked")&&(console.log("URL changed but blocked content still visible, reloading"),location.reload())}),1e3),setTimeout((()=>{document.body.innerHTML.includes("Content Blocked")&&(console.log("Blocked content persisted, forcing navigation to YouTube home"),window.location.assign("https://www.youtube.com/"))}),2e3),window.history.back()}else console.log("No history, navigating to YouTube home"),window.location.assign("https://www.youtube.com/")}catch(e){console.error("Navigation error:",e),console.log("Fallback: navigating to YouTube home"),window.location.assign("https://www.youtube.com/")}})),i&&i.addEventListener("click",(e=>{e.preventDefault(),console.log("Settings button clicked"),clearInterval(d);try{chrome&&chrome.runtime&&chrome.runtime.sendMessage?chrome.runtime.sendMessage({action:"openOptions"},(e=>{chrome.runtime.lastError?(console.warn("Runtime error:",chrome.runtime.lastError),u()):e&&!e.success&&(console.warn("Background script error:",e.error),u())})):u()}catch(e){console.error("Error sending message to background:",e),u()}})),c&&c.addEventListener("click",(async e=>{if(e.preventDefault(),console.log("Watch Anyway button clicked - user override for misdetection"),console.log("Override details:",{url:s,detectedTopic:t,confidence:r,allowedTopics:o}),confirm("Are you sure you want to watch this video?\n\nThis will override the content filter for this video only. The filter will continue to work for other videos.\n\nClick OK to proceed or Cancel to go back.")){const e=a(s);e&&chrome.storage.local.get(["watchAnywayOverrides"],(o=>{const t=o.watchAnywayOverrides||[];t.includes(e)||(t.push(e),chrome.storage.local.set({watchAnywayOverrides:t}),console.log("Watch Anyway override saved for video:",e))})),c.textContent="⏳ Loading video...",c.disabled=!0,c.style.background="#999",clearInterval(d),n=!1,window.location.assign(s)}else console.log("User cancelled override")}))}),100)}function l(e,o){let t="",n="";try{function r(e){if(e&&"object"==typeof e){e.videoId===o&&(e.title&&("string"==typeof e.title?t=e.title:e.title.runs?t=e.title.runs.map((e=>e.text)).join(""):e.title.simpleText&&(t=e.title.simpleText)),e.shortDescription&&("string"==typeof e.shortDescription?n=e.shortDescription:e.shortDescription.runs?n=e.shortDescription.runs.map((e=>e.text)).join(""):e.shortDescription.simpleText&&(n=e.shortDescription.simpleText)));for(const o in e)!e.hasOwnProperty(o)||t&&n||r(e[o])}}r(e)}catch(i){}return{title:t,description:n}}function d(){const e=document.getElementById("removetube-loading-overlay");e&&(e.remove(),document.body.style.overflow="")}async function u(o){if(e)return;let t;e=!0,n=!1;try{!function(){if(document.getElementById("removetube-loading-overlay"))return;const e=document.createElement("div");e.id="removetube-loading-overlay",e.innerHTML='\n      <div style="\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100vw;\n        height: 100vh;\n        background: rgba(0, 0, 0, 0.98); /* Even darker background */\n        z-index: 999999999;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, Arial, sans-serif;\n      ">\n        <div style="\n          text-align: center;\n          color: white;\n          background: rgba(255, 255, 255, 0.08);\n          padding: 40px;\n          border-radius: 20px;\n          backdrop-filter: blur(10px);\n        ">\n          <div style="\n            width: 40px;\n            height: 40px;\n            border: 3px solid rgba(255, 255, 255, 0.3);\n            border-top: 3px solid white;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n            margin: 0 auto 20px auto;\n          "></div>\n          <h3 style="margin: 0 0 10px 0; color: white;">🎯 RemoveTube</h3>\n          <p style="margin: 0; color: rgba(255, 255, 255, 0.85); font-size: 18px;">Checking if this content matches your allowed topics...</p>\n        </div>\n      </div>\n      <style>\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      </style>\n    ',document.body.appendChild(e),document.body.style.overflow="hidden"}(),t=setTimeout((()=>{console.log("Video check timeout, allowing video to load"),d(),e=!1}),5e3);const n=a(o);if(!n)return clearTimeout(t),d(),void(e=!1);console.log("Checking video immediately:",n);let r=await async function(e){try{const o=document.querySelectorAll('meta[property*="og:"], meta[name*="description"], meta[name*="title"]');let t="",n="";for(const e of o)"og:title"!==e.getAttribute("property")&&"title"!==e.getAttribute("name")||(t=e.getAttribute("content")||""),"og:description"!==e.getAttribute("property")&&"description"!==e.getAttribute("name")||(n=e.getAttribute("content")||"");if(!t||!n){const o=document.querySelectorAll("script");for(const r of o)if(r.textContent&&r.textContent.includes("ytInitialData"))try{const o=r.textContent.match(/var ytInitialData = ({.*?});/);if(o){const r=l(JSON.parse(o[1]),e);r.title&&(t=r.title),r.description&&(n=r.description);break}}catch(e){}}return{title:t,description:n}}catch(e){return console.warn("Error fetching video metadata:",e),{title:"",description:""}}}(n);if(r.title||r.description||(await new Promise((e=>setTimeout(e,1e3))),r=await m()),!r.title&&!r.description)return console.log("No video metadata found (title/description both empty), skipping classification request."),clearTimeout(t),d(),void(e=!1);console.log("Found video metadata:",r.title,r.description);const i=await s(r.title,r.description);clearTimeout(t),d(),i.allowed?console.log("Video allowed:",i.topic,`(${Math.round(100*i.confidence)}% confidence)`):c("Content not in allowed topics",i.topic,i.confidence)}catch(e){console.error("Error checking video before load:",e),clearTimeout(t),d()}finally{e=!1}}async function m(){const e=["h1.ytd-watch-metadata yt-formatted-string","h1.ytd-video-primary-info-renderer yt-formatted-string",'h1[class*="title"] yt-formatted-string',"#title h1 yt-formatted-string",".ytd-watch-metadata h1",".title.style-scope.ytd-video-primary-info-renderer","h1.title","#above-the-fold #title h1"],o=["#description-inline-expander yt-formatted-string",".ytd-expandable-video-description-body-renderer yt-formatted-string","#description yt-formatted-string",".content.style-scope.ytd-video-secondary-info-renderer","#meta-contents #description",".description-content",'[id="description"]',".ytd-video-secondary-info-renderer #description"];let t="",n="";for(let r=0;r<7;r++){if(r>0&&await new Promise((e=>setTimeout(e,600))),!t)for(const o of e){const e=document.querySelector(o);if(e&&e.textContent?.trim()){t=e.textContent.trim();break}}if(!n)for(const e of o){const o=document.querySelector(e);if(o&&o.textContent?.trim()){n=o.textContent.trim();break}}if(t||n)break}return{title:t,description:n}}function g(){const e=window.location.hostname,o=window.location.pathname,t="www.youtube.com"===e||"youtube.com"===e,n="/"===o||""===o||"/index.html"===o;return console.log("RemoveTube URL Check:",{hostname:e,pathname:o,isYouTube:t,isHomePage:n}),t&&n}function p(){let e=0;!function n(){e++,console.log(`RemoveTube init attempt ${e}/20`),document.body&&document.head?(console.log("DOM ready, running RemoveTube init"),async function(){console.log("RemoveTube initializing...");try{const e=await new Promise((e=>{chrome.storage.sync.get(["allowedTopics","strictMode","isSetupComplete"],e)}));o=e.allowedTopics||[],t=!1!==e.strictMode;const n=!0===e.isSetupComplete;if(console.log("RemoveTube settings loaded:",{allowedTopics:o.length,sessionBased:!0,isSetupComplete:n}),g()&&!n)return console.log("Showing setup overlay on YouTube home page - Setup not complete"),void setTimeout((()=>{r()}),500);if(0===o.length)return void console.log("No allowed topics set, RemoveTube inactive");window.location.pathname.includes("/watch")&&u(window.location.href);let i=location.href;new MutationObserver((()=>{const e=location.href;e!==i&&(i=e,chrome.storage.sync.get(["isSetupComplete"],(e=>{chrome.runtime.lastError?console.warn("RemoveTube: Error loading isSetupComplete during navigation:",chrome.runtime.lastError.message):g()&&!e.isSetupComplete&&(console.log("Navigation to home page detected, showing setup overlay (setup not complete)"),setTimeout((()=>r()),1e3))})),e.includes("/watch")&&u(e))})).observe(document,{subtree:!0,childList:!0}),document.addEventListener("click",(e=>{const t=e.target.closest('a[href*="/watch"]');if(t&&o.length>0){const e=t.getAttribute("href");e&&e.includes("/watch")&&setTimeout((()=>{window.location.href.includes("/watch")&&u(window.location.href)}),100)}}),!0),window.addEventListener("popstate",(()=>{setTimeout((()=>{window.location.href.includes("/watch")&&o.length>0&&u(window.location.href)}),100)}));const s=history.pushState,a=history.replaceState;history.pushState=function(...e){s.apply(this,e),setTimeout((()=>{window.location.href.includes("/watch")&&o.length>0&&u(window.location.href)}),50)},history.replaceState=function(...e){a.apply(this,e),setTimeout((()=>{window.location.href.includes("/watch")&&o.length>0&&u(window.location.href)}),50)}}catch(e){console.error("RemoveTube: Error during initialization:",e),console.log("RemoveTube: Running in fallback mode due to initialization error")}}().catch((e=>{console.error("RemoveTube init failed:",e)}))):e<20?(console.log("DOM not ready, retrying in 100ms..."),setTimeout(n,100)):console.warn("RemoveTube init failed after maximum attempts")}()}window.addEventListener("message",(e=>{"SHOW_SETUP_OVERLAY"===e.data.type&&r()})),window.forceRemoveTubeSetup=function(){console.log("Forcing RemoveTube setup..."),r()},window.resetRemoveTubeSetup=function(){console.log("Resetting RemoveTube session setup...");try{chrome.runtime.sendMessage({action:"clearSessionStorage"},(e=>{if(chrome.runtime.lastError)return void console.error("Error clearing session storage:",chrome.runtime.lastError.message);e&&e.success&&console.log("RemoveTube session cleared - setup will appear on next YouTube visit");const o=document.getElementById("removetube-setup-overlay");o&&(o.remove(),document.body.classList.remove("removetube-overlay-active")),g()&&setTimeout((()=>r()),500)}))}catch(e){console.error("Error accessing storage for reset:",e)}},window.debugRemoveTube=function(){console.log("=== RemoveTube Debug Info ==="),console.log("Current URL:",window.location.href),console.log("Is YouTube Home Page:",g()),console.log("Setup overlay exists:",!!document.getElementById("removetube-setup-overlay")),console.log("Extension context available:",!(!chrome||!chrome.storage)),console.log("Current settings:",{allowedTopics:o,strictMode:t});try{chrome.runtime.sendMessage({action:"getSessionStorage",keys:null},(e=>{if(chrome.runtime.lastError)console.log("Session storage error:",chrome.runtime.lastError.message);else if(e&&e.success){const o=e.data||{};console.log("📱 Session storage data:",o),console.log("📱 Session topics:",o.sessionTopics||[]),console.log("📱 Session strict mode:",!1!==o.sessionStrictMode)}chrome.storage.sync.get(null,(e=>{chrome.runtime.lastError?console.log("Persistent storage error:",chrome.runtime.lastError.message):(console.log("💾 Persistent storage data:",e),console.log("💾 Extension enabled:",!1!==e.extensionEnabled),void 0!==e.overrideCount?console.log("🚨 Manual override count:",e.overrideCount):console.log("📊 No manual overrides recorded yet"),console.log("✅ Session-based setup: Topics are stored per YouTube session only"),console.log("✅ Setup wizard will appear every time you visit YouTube"))}))}))}catch(e){console.log("Error accessing storage:",e)}},window.clearRemoveTubeStorage=function(){try{chrome.runtime.sendMessage({action:"clearSessionStorage"},(e=>{chrome.runtime.lastError?console.log("Error clearing session storage:",chrome.runtime.lastError.message):(e&&e.success&&console.log("RemoveTube session storage cleared - setup will appear on next page load"),g()&&setTimeout((()=>r()),500))}))}catch(e){console.log("Error accessing session storage for clear:",e)}},window.debugRemoveTubeOverrides=function(){console.log("=== RemoveTube Manual Override Debug ===");try{chrome.storage.local.get(["overrideCount"],(e=>{if(chrome.runtime.lastError)return void console.log("Storage error:",chrome.runtime.lastError.message);const o=e.overrideCount||0;console.log("📊 Total manual overrides used:",o),o>0?(console.log('💡 Users have used the "Watch Anyway" feature',o,"times"),console.log("💡 This suggests either false positives in detection or legitimate override needs")):console.log("✅ No manual overrides recorded - filtering is working well or not being used"),document.body.innerHTML.includes("Content Blocked")?(console.log("🚫 Currently viewing blocked content"),console.log('🔄 To test manual override: click the "Watch Anyway" button'),document.getElementById("watch-anyway-btn")?console.log('✅ "Watch Anyway" button found and ready'):console.log('❌ "Watch Anyway" button not found - this might be an error')):(console.log("🎬 Not currently on a blocked video page"),console.log("💡 To test manual override: navigate to a video outside your allowed topics"))}))}catch(e){console.log("Error accessing storage:",e)}},window.testRemoveTubeNavigation=function(){console.log("Testing RemoveTube navigation..."),console.log("Current URL:",window.location.href),console.log("History length:",window.history.length);try{console.log("Testing history.back()..."),window.history.back(),setTimeout((()=>{console.log("After history.back() - URL:",window.location.href),window.location.href.includes("/watch")&&(console.log("history.back() failed, testing location.assign..."),window.location.assign("https://www.youtube.com/"))}),1500)}catch(e){console.error("Navigation test error:",e)}},"loading"===document.readyState?(console.log("Document loading, waiting for DOMContentLoaded and using retry logic"),document.addEventListener("DOMContentLoaded",p),setTimeout(p,100)):(console.log("Document already loaded, initializing immediately"),p()),setTimeout((()=>{if(!document.getElementById("removetube-setup-overlay")&&g()){console.log("Delayed check: trying to show setup overlay again");try{chrome.runtime.sendMessage({action:"getSessionStorage",keys:["sessionTopics"]},(e=>{chrome.runtime.lastError?console.warn("RemoveTube: Session storage error in delayed check:",chrome.runtime.lastError.message):e&&e.success&&0===((e.data||{}).sessionTopics||[]).length&&(console.log("Delayed check: showing setup overlay (session-based)"),r())}))}catch(e){console.warn("RemoveTube: Error accessing session storage in delayed check:",e)}}}),2e3),window.addEventListener("beforeunload",(()=>{"www.youtube.com"!==window.location.hostname&&"youtube.com"!==window.location.hostname&&chrome.storage.sync.remove(["allowedTopics","strictMode","isSetupComplete"])}));let h=window.location.hostname;new MutationObserver((()=>{const e=window.location.hostname;if(e!==h&&(h=e,"www.youtube.com"!==e&&"youtube.com"!==e)){console.log("RemoveTube: Navigating away from YouTube, clearing session storage");try{chrome&&chrome.runtime&&chrome.runtime.sendMessage({action:"clearSessionStorage"},(e=>{chrome.runtime.lastError?console.warn("RemoveTube: Error clearing session storage on navigation:",chrome.runtime.lastError.message):e&&e.success&&console.log("RemoveTube: Session storage cleared on navigation")}))}catch(e){console.warn("RemoveTube: Error accessing session storage for navigation cleanup:",e)}}})).observe(document,{subtree:!0,childList:!0})}();