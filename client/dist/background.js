chrome.runtime.onInstalled.addListener((e=>{console.log("RemoveTube extension installed/updated, reason:",e.reason),chrome.storage.sync.get(["allowedTopics","isSetupComplete"],(s=>{const r={allowedTopics:s.allowedTopics||[],isSetupComplete:s.isSetupComplete||!1,strictMode:void 0===s.strictMode||s.strictMode,extensionEnabled:void 0===s.extensionEnabled||s.extensionEnabled};"install"===e.reason?(r.isSetupComplete=!1,r.allowedTopics=[],console.log("New installation detected, forcing setup")):"update"===e.reason&&(s.allowedTopics&&s.allowedTopics.length>0&&!s.isSetupComplete?(r.isSetupComplete=!0,console.log("Update detected: correcting setup status to complete")):s.allowedTopics&&0!==s.allowedTopics.length||!s.isSetupComplete||(r.isSetupComplete=!1,console.log("Update detected: correcting setup status to incomplete"))),chrome.storage.sync.set(r,(()=>{chrome.runtime.lastError?console.error("Error setting default values:",chrome.runtime.lastError.message):console.log("Extension defaults set:",r)}))}))})),chrome.runtime.onMessage.addListener(((e,s,r)=>{if("openOptions"===e.action){try{chrome.runtime.openOptionsPage(),r({success:!0})}catch(e){console.error("Error opening options page:",e),r({success:!1,error:e.message})}return!0}if("setSessionStorage"===e.action){console.log("Background: Setting session storage:",e.data);try{chrome.storage.session.set(e.data,(()=>{chrome.runtime.lastError?(console.error("Error setting session storage:",chrome.runtime.lastError.message),r({success:!1,error:chrome.runtime.lastError.message})):(console.log("Session storage set successfully:",e.data),r({success:!0}))}))}catch(e){console.error("Error accessing session storage:",e),r({success:!1,error:e.message})}return!0}if("getSessionStorage"===e.action){console.log("Background: Getting session storage for keys:",e.keys);try{chrome.storage.session.get(e.keys,(e=>{chrome.runtime.lastError?(console.error("Error getting session storage:",chrome.runtime.lastError.message),r({success:!1,error:chrome.runtime.lastError.message})):(console.log("Session storage retrieved:",e),r({success:!0,data:e}))}))}catch(e){console.error("Error accessing session storage:",e),r({success:!1,error:e.message})}return!0}if("clearSessionStorage"===e.action){console.log("Background: Clearing session storage");try{chrome.storage.session.clear((()=>{chrome.runtime.lastError?(console.error("Error clearing session storage:",chrome.runtime.lastError.message),r({success:!1,error:chrome.runtime.lastError.message})):(console.log("Session storage cleared successfully"),r({success:!0}))}))}catch(e){console.error("Error clearing session storage:",e),r({success:!1,error:e.message})}return!0}if("saveSettings"===e.action){console.log("Background: Saving settings:",e.data);try{chrome.storage.sync.set(e.data,(()=>{chrome.runtime.lastError?(console.error("Error saving settings:",chrome.runtime.lastError.message),r({success:!1,error:chrome.runtime.lastError.message})):(console.log("Settings saved successfully:",e.data),r({success:!0}))}))}catch(e){console.error("Error accessing storage for saveSettings:",e),r({success:!1,error:e.message})}return!0}return!0}));